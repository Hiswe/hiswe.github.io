{"version":3,"sources":["toc.js","index.js"],"names":["TOC_SELECTOR","STUCK_CLASS","SENTINEL_CLASS","init","window","toc","document","querySelector","tocSentinel","createElement","classList","add","insertBefore","firstChild","observerCb","entries","tocSentinelEntry","isStuck","intersectionRatio","classMethod","observer","IntersectionObserver","threshold","observe"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAMA,YAAY,YAAlB;AACA,IAAMC,WAAW,aAAjB;AACA,IAAMC,cAAc,+BAApB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB;AACA;AACA,MAAI,2BAA2BC,MAA/B,EAAuC;AACvC,MAAMC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAwBP,YAAxB,CAAZ;AACA,MAAI,CAACK,GAAL,EAAU;AACV,MAAMG,WAAW,GAAGF,QAAQ,CAACG,aAAT,OAApB;AACAD,EAAAA,WAAW,CAACE,SAAZ,CAAsBC,GAAtB,CAA2BT,cAA3B;AACAG,EAAAA,GAAG,CAACO,YAAJ,CAAkBJ,WAAlB,EAA+BH,GAAG,CAACQ,UAAnC;;AAEA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAAc;AAC/B,QAAMC,gBAAgB,GAAGD,OAAO,CAAE,CAAF,CAAhC;AACA,QAAME,OAAO,GAAGD,gBAAgB,CAACE,iBAAjB,KAAuC,CAAvD;AACA,QAAMC,WAAW,GAAGF,OAAO,mBAA3B;AACAZ,IAAAA,GAAG,CAACK,SAAJ,CAAeS,WAAf,EAA8BlB,WAA9B;AACD,GALD;;AAMA,MAAMmB,QAAQ,GAAG,IAAIC,oBAAJ,CAAyBP,UAAzB,EAAqC;AACpDQ,IAAAA,SAAS,EAAE;AADyC,GAArC,CAAjB;AAGAF,EAAAA,QAAQ,CAACG,OAAT,CAAkBf,WAAlB;AACD,CApBD;;eAsBeL;;;;;AC3Bf;;;;AAEA","file":"hiswe-theme.js","sourceRoot":"../client-javascript","sourcesContent":["\nconst TOC_SELECTOR = `.js-toc`\nconst STUCK_CLASS = `is-stuck`\nconst SENTINEL_CLASS = `article-long__toc-sentinel`\n\nconst init = () => {\n  // https://developers.google.com/web/updates/2017/09/sticky-headers\n  // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n  if (!`IntersectionObserver` in window) return\n  const toc = document.querySelector( TOC_SELECTOR )\n  if (!toc) return\n  const tocSentinel = document.createElement( `div` )\n  tocSentinel.classList.add( SENTINEL_CLASS )\n  toc.insertBefore( tocSentinel, toc.firstChild )\n\n  const observerCb = (entries)  => {\n    const tocSentinelEntry = entries[ 0 ]\n    const isStuck = tocSentinelEntry.intersectionRatio === 0\n    const classMethod = isStuck ? `add` : `remove`\n    toc.classList[ classMethod ]( STUCK_CLASS )\n  }\n  const observer = new IntersectionObserver(observerCb, {\n    threshold: 1,\n  })\n  observer.observe( tocSentinel)\n}\n\nexport default init\n","import toc from './toc'\n\ntoc()\n"]}